---
import { Image } from "astro:assets";
import ChooseImg from "../../assets/images/data-protection.webp";

const { title, description, reverse } = Astro.props;
const classMd = reverse ? "md:flex-row-reverse" : "";
---

<figure
  class=`mx-auto my-8 w-[90%] max-w-[330px] md:flex md:max-w-[70%] lg:max-w-[50%] md:max-h-[250px] ${classMd} elemento-animado opacity-0`
>
  <div class="relative h-[130px] md:w-[50%] md:h-[250px]">
    <Image
      class="size-full object-cover brightness-50"
      src={ChooseImg}
      alt="ElecciÃ³n para elegirnos"
    />
    <div class="absolute inset-0 flex items-center justify-center">
      <h3 class="text-xl text-white font-semibold md:hidden">{title}</h3>
    </div>
  </div>
  <figcaption
    class=`md:flex md:flex-col md:items-center md:justify-evenly p-5 md:w-[50%] text-center text-(--accent-color) bg-white rounded-b-2xl`
  >
    <h3 class="responsive-h3 text-(--primary-color) font-semibold">{title}</h3>
    <p class="responsive-desk text-(--accent-color)">
      {description}
    </p>
  </figcaption>
</figure>

<style>
  .responsive-desk {
    font-size: clamp(14px, 0.125vw + 13.6px, 16px);
  }

  .slide-right {
    animation: slide-right 0.4s linear both;
  }

  @keyframes slide-right {
    0% {
        opacity: 0;
      transform: translateX(-100px);
    }
    100% {
        opacity: 1;
      transform: translateX(0px);
    }
  }
</style>

<script>
  const elementos = document.querySelectorAll(".elemento-animado");

  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          entry.target.classList.add("slide-right");
          observer.unobserve(entry.target);
        }
      });
    },
    { threshold: 0.4 }
  );

  elementos.forEach((elemento) => {
    observer.observe(elemento);
  });
</script>
